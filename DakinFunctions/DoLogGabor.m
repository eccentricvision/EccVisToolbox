function [res,varargout]=DoLogGabor(im,FreqPeak,FreqSigma,ThetaPeak,ThetaSigma,graphics)% DoLogGabor% e.g. [res]=DoLogGabor(im,[8 32 128],[0.5],DegToRad([0:45:135]),DegToRad(15),0);if ~exist ('graphics') graphics=0; end[n m]=size(im);iFT = fft2(im);if length(ThetaSigma)< length(ThetaPeak) 	ThetaSigma = ThetaSigma(1)+ 0.*ThetaPeak; 	endif length(FreqSigma) < length(FreqPeak)		FreqSigma  = FreqSigma(1) + 0.*FreqPeak; 	end[X,Y]=meshgrid((-m/2: (m/2-1))/(m/2),(-n/2 : (n/2 - 1))/(n/2));CentreDist = sqrt(X.^2 + Y.^2);CentreDist(round(n/2+1),round(m/2+1)) = 1; % Set 0 dist to be one (hack: we'll fix this later)CentreAng = atan2(-Y,X);s1=sin(CentreAng); c1=cos(CentreAng);for o = 1:length(ThetaPeak)    if (ThetaSigma(o)>0)        ds = s1 * cos(ThetaPeak(o)) - c1 * sin(ThetaPeak(o));        dc = c1 * cos(ThetaPeak(o)) + s1 * sin(ThetaPeak(o));        ds2 = s1 * cos(pi+ThetaPeak(o)) - c1 * sin(pi+ThetaPeak(o));        dc2 = c1 * cos(pi+ThetaPeak(o)) + s1 * sin(pi+ThetaPeak(o));        dtheta  = abs(atan2(ds,dc)); % Absolute angular distance.        dtheta2 = abs(atan2(ds2,dc2));        spread = exp((-dtheta.^2) /(2*ThetaSigma(o)^2)); %+exp((-dtheta2.^2)/(2*ThetaSigma(o)^2)) Angular filter component.    else        spread=ones(n,m);    end    for s = 1:length(FreqPeak)        FreqSdAbsolute=(1/(2.^(FreqSigma(s))));        rfo = (FreqPeak(s)./min([m n]))/0.5;            % Radius from centre of frequency plane        logGabor = exp((-(log(CentreDist/rfo)).^2) / (2 * log(FreqSdAbsolute)^2));        logGabor(round(n/2+1),round(m/2+1))=0; 	% Impose zero d.c. on the filter (sorts out the hack above)        filter1 = (logGabor.*spread); 			% Multiply by angular spread        tmp1=ifft2(iFT.*fftshift(filter1));        res(:,:,s,o)=tmp1;        energy(s,o)=std(tmp1(:));        % All this just plots stuff        if (graphics)            if (o==1) % Do scale plot                fList(:,s)=filter1(m/2+1,:)';                xx1=[1:m/2]; xx2=[1:0.01:m/2];                yy2=interp1(xx1,fList((m/2+1):end,s),xx2,'cubic');                gt1=find(yy2>(0.5*max(yy2(:))));                LoCut=xx2(gt1(1));                HiCut=xx2(gt1(end));                fprintf('lo:%3.3f Hi:%3.3f ratio:%3.3f\n',LoCut,HiCut,log(HiCut/LoCut)/log(2));                subplot(2,3,1); semilogx([1:m/2],fList((m/2+1):end,s),'o',xx2,yy2,'r-');                ssA=sum(fList((m/2+1):end,:),2);                subplot(2,3,2); semilogx([1:m/2],ssA,'-o'); axis([1 m/2 0 1.1*max(ssA)]);                subplot(2,3,3); ishow(fftshift(real(ifft2(fftshift(filter)))));                drawnow;            end            if (s==(length(FreqPeak)-1))&(ThetaSigma(o)>0) % Do orient plot                InRange=((CentreDist<(1.02*rfo))&(CentreDist>(0.98*rfo)));                TheAngs=CentreAng(InRange); TheVals=filter(InRange);                [TheAngsS, SortInd]=unique(TheAngs);                TheVals=TheVals(SortInd);                angStore(:,o) = [interp1(TheAngsS,TheVals,DegToRad([-180:180]))]';                subplot(2,3,4); plot(([-180:180]),angStore,'-');                ss1=sum(angStore,2);                subplot(2,3,5);plot(([-180:180]),ss1,'-'); axis([-180 180 0 1.1*max(ss1)]);                drawnow                AngBin=DegToRad([0:8:pi]);            end        end    endendif nargout>1    varargout{1}=energy';end